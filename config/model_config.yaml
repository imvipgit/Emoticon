model:
  # Model paths
  emotion_model_path: "models/emotion_model.pth"
  face_detection_model_path: "models/face_detection_model.pth"
  
  # Emotion recognition settings
  emotion:
    model_type: "cnn"          # CNN, ResNet, EfficientNet
    input_size: [48, 48]       # Input image size [width, height]
    num_classes: 7              # Number of emotion classes
    classes: ["angry", "disgust", "fear", "happy", "sad", "surprise", "neutral"]
    
  # Face detection settings
  face_detection:
    model_type: "haar"         # haar, dnn, mtcnn
    scale_factor: 1.1          # Scale factor for face detection
    min_neighbors: 5           # Minimum neighbors for detection
    min_size: [30, 30]         # Minimum face size [width, height]
    
  # Performance settings
  performance:
    confidence_threshold: 0.7   # Minimum confidence for detection
    gpu_acceleration: true      # Enable GPU acceleration
    batch_size: 1              # Batch size for inference
    num_workers: 2             # Number of worker threads
    
  # Preprocessing settings
  preprocessing:
    normalize: true             # Normalize pixel values
    mean: [0.485, 0.456, 0.406]  # ImageNet mean values
    std: [0.229, 0.224, 0.225]   # ImageNet std values
    augment: false             # Enable data augmentation
    
  # Jetson optimization
  jetson:
    use_tensorrt: true         # Enable TensorRT optimization
    fp16_precision: true       # Use FP16 precision
    max_workspace_size: 1 << 30  # TensorRT workspace size
    enable_cuda_graph: true    # Enable CUDA graph optimization
